#!/usr/bin/python

import sys
import os
import signal
#import threading
#import fcntl
import select
from server import dbus_server, dbus_monitor_monitor

def main(args):
    global dbusmonitor

    try:
        if len(args) != 2:
            print 'Usage...'
            exit(1)

        signal.signal(signal.SIGINT, sigint_handler)
        argport = int(sys.argv[1])
        fd_r, fd_w = os.pipe()

        if os.fork() == 0:
            # Child process: exec dbus-monitor and pipe output to parent
            os.dup2(fd_w, sys.stdout.fileno())
            child_name = '/usr/bin/dbus-monitor'
            os.execl(child_name, child_name, '--session')
        else:
            # Parent process: Read from the dbus-monitor pipe and parse dbus messages.
            dbusmonitor = dbus_monitor_monitor.DbusMonitorMonitor(fd_r)
            dbusmonitor.run()
    except Exception as e:
        print e
        #raise e
        return 1
    else:
        return 0

def sigint_handler(signum, frame):
    global dbusmonitor
    dbusmonitor.stop()

if __name__ == "__main__":
    status = main(sys.argv)
    print 'exit status: %d' % status
    sys.exit(status)
